#!/usr/bin/env python
from math import pi
PACKAGE = "joint_space_controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

k_p = gen.add_group("k_p")
k_p.add("k1_p", "double", 0, "K1_p parameter", 15.0, 0.0, 50)
k_p.add("k2_p", "double", 0, "K2_p parameter", 15.0, 0.0, 50)
k_p.add("k3_p", "double", 0, "K3_p parameter", 15.0, 0.0, 50)
k_p.add("k4_p", "double", 0, "K4_p parameter", 7.0, 0.0, 10)
k_p.add("k5_p", "double", 0, "K5_p parameter", 0.7, 0.0, 10)
k_p.add("k6_p", "double", 0, "K6_p parameter", 0.0, 0.0, 10)

k_d = gen.add_group("k_d")
k_d.add("k1_d", "double", 0, "K1_d parameter", 7.0, 0.0, 50)
k_d.add("k2_d", "double", 0, "K2_d parameter", 7.0, 0.0, 50)
k_d.add("k3_d", "double", 0, "K3_d parameter", 7.0, 0.0, 50)
k_d.add("k4_d", "double", 0, "K4_d parameter", 0.04, 0.0, 1) 
k_d.add("k5_d", "double", 0, "K5_d parameter", 0.01, 0.0, 1)
k_d.add("k6_d", "double", 0, "K6_d parameter", 0.0, 0.0, 1) 

q_d = gen.add_group("q_d")
q_d.add("q1_d", "double", 0, "Desired value for the first joint", 0.0, -pi, pi)
q_d.add("q2_d", "double", 0, "Desired value for the second joint", 0.0, -pi/2, pi/2) # Limitations on the rotational joints to avoid doubling on themselves
q_d.add("q3_d", "double", 0, "Desired value for the third joint", 0.0, -pi, pi)
q_d.add("q4_d", "double", 0, "Desired value for the fourth joint", 0.0, -pi, pi)
q_d.add("q5_d", "double", 0, "Desired value for the fifth joint", 0.0, -pi, pi)
q_d.add("q6_d", "double", 0, "Desired value for the sixth joint", 0.0, -pi, pi)

exit(gen.generate(PACKAGE, "joint_space_controller", "PdControl"))
